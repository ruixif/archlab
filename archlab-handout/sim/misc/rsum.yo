                      | #implement the Y86 assembly code based on the given c code
                      | #
                      | #
                      | #
                      | #Program start
  0x000:              | .pos 0x0
  0x000: 30f400030000 | irmovl Stack,%esp
  0x006: 30f500030000 | irmovl Stack,%ebp
  0x00c: 30f21c000000 | irmovl ele1,%edx
  0x012: a02f         | pushl %edx
  0x014: 8034000000   | call rsum_list
  0x019: 00           | halt
                      | # Sample linked list
  0x01c:              | .align 4
  0x01c:              | ele1:
  0x01c: 0a000000     | .long 0x00a
  0x020: 24000000     | .long ele2
  0x024:              | ele2:
  0x024: b0000000     | .long 0x0b0
  0x028: 2c000000     | .long ele3
  0x02c:              | ele3:
  0x02c: 000c0000     | .long 0xc00
  0x030: 00000000     | .long 0
                      | #function
  0x034:              | rsum_list:
  0x034: a05f         |     pushl %ebp
  0x036: 2045         |     rrmovl %esp,%ebp
  0x038: 30f304000000 |     irmovl $4,%ebx
  0x03e: 6134         |     subl %ebx,%esp
  0x040: 6300         |     xorl %eax,%eax
  0x042: 502508000000 |     mrmovl 8(%ebp),%edx
  0x048: 6222         |     andl %edx,%edx
  0x04a: 7370000000   |     je END
                      |                             #Recursion starts
  0x04f: 506200000000 |     mrmovl (%edx),%esi
  0x055: 406400000000 |     rmmovl %esi,(%esp)
  0x05b: 506204000000 |     mrmovl 4(%edx),%esi
  0x061: a06f         |     pushl %esi
  0x063: 8034000000   |     call rsum_list
  0x068: 506404000000 |     mrmovl 4(%esp),%esi
  0x06e: 6060         |     addl %esi,%eax
  0x070:              | END:
  0x070: 2054         |     rrmovl %ebp,%esp
  0x072: b05f         |     popl %ebp
  0x074: 90           |     ret
  0x300:              | .pos 0x300   #stack starts here
  0x300:              | Stack:
                      | 
                      | 
                      | 
